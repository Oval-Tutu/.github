name: Sync Organization Labels

on:
  # Trigger when labels themselves are created, edited, or deleted in this repository
  label:
    types: [created, edited, deleted]
  
  # Manual trigger
  workflow_dispatch:
  
  # Weekly sync to catch any drift
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM UTC

jobs:
  sync-labels:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup GitHub CLI
        run: |
          # GitHub CLI is pre-installed on GitHub runners
          gh --version

      - name: Get source labels and sync to organization repositories
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Getting labels from Oval-Tutu/.github repository..."
          gh label list --repo Oval-Tutu/.github --json name,color,description > source-labels.json
          
          echo "Source labels:"
          cat source-labels.json | jq .
          
          echo ""
          echo "Getting all repositories in Oval-Tutu organization..."
          
          # Get all repos, exclude .github repo (source of truth), exclude forks and archived repos
          gh repo list Oval-Tutu \
            --limit 1000 \
            --json name,isArchived,isFork,isPrivate \
            --jq '.[] | select(.name != ".github") | select(.isArchived == false) | select(.isFork == false) | .name' > target-repos.txt
          
          echo "Target repositories:"
          cat target-repos.txt
          
          # Count repos for summary
          repo_count=$(wc -l < target-repos.txt)
          echo "Will sync to $repo_count repositories"
          
          echo ""
          echo "Starting label sync process..."
          
          # Initialize counters
          total_repos=0
          successful_repos=0
          failed_repos=0
          
          # Process each target repository
          while IFS= read -r repo_name; do
            if [ -z "$repo_name" ]; then
              continue
            fi
            
            echo ""
            echo "üîÑ Syncing labels for Oval-Tutu/$repo_name"
            total_repos=$((total_repos + 1))
            
            repo_failed=0
            
            # Process each label from source file directly
            while IFS= read -r label_line; do
              # Extract label data using jq
              name=$(echo "$label_line" | jq -r '.name')
              color=$(echo "$label_line" | jq -r '.color')
              description=$(echo "$label_line" | jq -r '.description // ""')
              
              # Validate required fields
              if [[ -z "$name" || -z "$color" ]]; then
                echo "  ‚ö†Ô∏è  Skipping invalid label (missing name or color)"
                continue
              fi
              
              echo "  üìù Syncing label: $name"
              
              # Create or update label with error capture
              if label_error=$(gh label create "$name" \
                --color "$color" \
                --description "$description" \
                --repo "Oval-Tutu/$repo_name" \
                --force 2>&1); then
                echo "    ‚úÖ Label '$name' synced successfully"
              else
                echo "    ‚ö†Ô∏è  Label '$name' sync failed"
                echo "      Error: $label_error"
                repo_failed=1
              fi
            done < <(jq -c '.[]' source-labels.json)
            
            if [ $repo_failed -eq 0 ]; then
              successful_repos=$((successful_repos + 1))
              echo "  ‚úÖ Repository $repo_name completed successfully"
            else
              failed_repos=$((failed_repos + 1))
              echo "  ‚ùå Repository $repo_name had errors"
            fi
            
          done < target-repos.txt
          
          echo ""
          echo "üìä Sync Summary:"
          echo "  Total repositories processed: $total_repos"
          echo "  Successful: $successful_repos"
          echo "  Failed: $failed_repos"
          
          # Store summary for later steps
          echo "total_repos=$total_repos" >> $GITHUB_ENV
          echo "successful_repos=$successful_repos" >> $GITHUB_ENV
          echo "failed_repos=$failed_repos" >> $GITHUB_ENV
          
          if [ $failed_repos -gt 0 ]; then
            echo "‚ö†Ô∏è  Some repositories had sync errors. Check logs above."
            echo "‚ÑπÔ∏è  Continuing with partial success to avoid blocking other repositories."
          else
            echo "üéâ All repositories synced successfully!"
          fi

      - name: Create sync summary
        if: always()
        run: |
          echo "## Label Sync Report üè∑Ô∏è" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Source Repository" >> $GITHUB_STEP_SUMMARY
          echo "- üìç Labels sourced from: \`Oval-Tutu/.github\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Target Repositories" >> $GITHUB_STEP_SUMMARY
          echo "- üéØ Repositories processed: $total_repos" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Successful: $successful_repos" >> $GITHUB_STEP_SUMMARY
          echo "- ‚ùå Failed: $failed_repos" >> $GITHUB_STEP_SUMMARY
          echo "- üö´ Excluded: \`.github\` (source repository), archived repos, forks" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Labels Applied" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          cat source-labels.json >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY